<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>微服务 on 潇潇’s blog</title>
        <link>https://xxl999227.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
        <description>Recent content in 微服务 on 潇潇’s blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Powered by 潇潇</copyright>
        <lastBuildDate>Wed, 17 Apr 2024 15:33:50 +0800</lastBuildDate><atom:link href="https://xxl999227.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>【微服务】4、Ribbon负载均衡</title>
        <link>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A14ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</link>
        <pubDate>Wed, 17 Apr 2024 15:33:50 +0800</pubDate>
        
        <guid>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A14ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</guid>
        <description>&lt;h2 id=&#34;负载均衡流程&#34;&gt;负载均衡流程
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A14ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/img/image.png&#34;
	width=&#34;1335&#34;
	height=&#34;585&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;228&#34;
		data-flex-basis=&#34;547px&#34;
	
&gt;
&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A14ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/img/image-1.png&#34;
	width=&#34;1376&#34;
	height=&#34;657&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;209&#34;
		data-flex-basis=&#34;502px&#34;
	
&gt;
&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A14ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/img/image-2.png&#34;
	width=&#34;937&#34;
	height=&#34;479&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;469px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;负载均衡策略&#34;&gt;负载均衡策略
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;&lt;strong&gt;&lt;font style=&#34;color:white;&#34;&gt;内置负载均衡规则类&lt;/font&gt;&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;&lt;font style=&#34;color:white;&#34;&gt;规则描述&lt;/font&gt;&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font style=&#34;color:black;&#34;&gt;RoundRobinRule&lt;/font&gt;&lt;/td&gt;
          &lt;td&gt;&lt;font style=&#34;color:black;&#34;&gt;简单轮询服务列表来选择服务器。它是&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;Ribbon&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;默认的负载均衡规则。&lt;/font&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font style=&#34;color:black;&#34;&gt;AvailabilityFilteringRule&lt;/font&gt;&lt;/td&gt;
          &lt;td&gt;&lt;font style=&#34;color:black;&#34;&gt;对以下两种服务器进行忽略：&lt;/font&gt;&lt;br/&gt;&lt;font style=&#34;color:#a7a7a7;&#34;&gt;&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;（&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;1&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;）在默认情况下，这台服务器如果&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;3&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;次连接失败，这台服务器就会被设置为“短路”状态。短路状态将持续&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;30&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;秒，如果再次连接失败，短路的持续时间就会几何级地增加。&lt;/font&gt;&lt;br/&gt;&lt;font style=&#34;color:black;&#34;&gt;（&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;2&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;）并发数过高的服务器。如果一个服务器的并发连接数过高，配置了&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;AvailabilityFilteringRule&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;规则的客户端也会将其忽略。并发连接数的上限，可以由客户端的&lt;/font&gt;&lt;font style=&#34;color:#a7a7a7;&#34;&gt;&amp;laquo;/font&amp;gt;&lt;font style=&#34;color:#a7a7a7;&#34;&gt;clientName&lt;/font&gt;&lt;font style=&#34;color:#a7a7a7;&#34;&gt;&amp;gt;&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;.&lt;/font&gt;&lt;font style=&#34;color:#a7a7a7;&#34;&gt;&amp;laquo;/font&amp;gt;&lt;font style=&#34;color:#a7a7a7;&#34;&gt;clientConfigNameSpace&lt;/font&gt;&lt;font style=&#34;color:#a7a7a7;&#34;&gt;&amp;gt;&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;.&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;ActiveConnectionsLimit&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;属性进行配置。&lt;/font&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font style=&#34;color:black;&#34;&gt;WeightedResponseTimeRule&lt;/font&gt;&lt;/td&gt;
          &lt;td&gt;&lt;font style=&#34;color:black;&#34;&gt;为每一个服务器赋予一个权重值。服务器响应时间越长，这个服务器的权重就越小。这个规则会随机选择服务器，这个权重值会影响服务器的选择。&lt;/font&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font style=&#34;color:#ad2b26;&#34;&gt;ZoneAvoidanceRule&lt;/font&gt;&lt;/td&gt;
          &lt;td&gt;&lt;font style=&#34;color:black;&#34;&gt;以区域可用的服务器为基础进行服务器的选择。使用&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;Zone&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;对服务器进行分类，这个&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;Zone&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;可以理解为一个机房、一个机架等。而后再对&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;Zone&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;内的多个服务做轮询。&lt;/font&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font style=&#34;color:black;&#34;&gt;BestAvailableRule&lt;/font&gt;&lt;/td&gt;
          &lt;td&gt;&lt;font style=&#34;color:black;&#34;&gt;忽略那些短路的服务器，并选择并发数较低的服务器。&lt;/font&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font style=&#34;color:black;&#34;&gt;RandomRule&lt;/font&gt;&lt;/td&gt;
          &lt;td&gt;&lt;font style=&#34;color:black;&#34;&gt;随机选择一个可用的服务器。&lt;/font&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;font style=&#34;color:black;&#34;&gt;RetryRule&lt;/font&gt;&lt;/td&gt;
          &lt;td&gt;&lt;font style=&#34;color:black;&#34;&gt;重试机制的选择逻辑&lt;/font&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A14ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/img/image-3.png&#34;
	width=&#34;1146&#34;
	height=&#34;652&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;175&#34;
		data-flex-basis=&#34;421px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;注意：第一种方式为全局设置（order服务访问任何微服务都为随机策略），第二种方法可以针对单个微服务设置负载均衡&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;&lt;/font&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;饥饿加载&#34;&gt;饥饿加载
&lt;/h2&gt;&lt;p&gt;&lt;font style=&#34;color:#262626;&#34;&gt;Ribbon默认是采用懒加载，即第一次访问时才会去创建LoadBalanceClient，请求时间会很长。&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:#262626;&#34;&gt;而饥饿加载则会在项目启动时创建，降低第一次访问的耗时，通过下面配置开启饥饿加载：&lt;/font&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;ribbon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;eager-load&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;enabled&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 开启饥饿加载&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;clients&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;userservice&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;c&#34;&gt;# 指定对userservice这个服务饥饿加载&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A14ribbon%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/img/image-4.png&#34;
	width=&#34;1222&#34;
	height=&#34;603&#34;
	
	loading=&#34;lazy&#34;
	
		alt=&#34;alt text&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;202&#34;
		data-flex-basis=&#34;486px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【微服务】3、Eureka注册中心</title>
        <link>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A13eureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</link>
        <pubDate>Tue, 16 Apr 2024 16:23:35 +0800</pubDate>
        
        <guid>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A13eureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</guid>
        <description>&lt;h2 id=&#34;font-stylecolor262626服务调用出现的问题font&#34;&gt;&lt;strong&gt;&lt;font style=&#34;color:#262626;&#34;&gt;服务调用出现的问题&lt;/font&gt;&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;:::color3&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;服务消费者该如何获取服务提供者的地址信息？&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;果有多个服务提供者，消费者该如何选择？&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;消费者如何得知服务提供者的健康状态？&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A13eureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/img/image.png&#34;
	width=&#34;1132&#34;
	height=&#34;328&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;345&#34;
		data-flex-basis=&#34;828px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;eureka的作用&#34;&gt;Eureka的作用
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A13eureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/img/image-1.png&#34;
	width=&#34;1345&#34;
	height=&#34;730&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;184&#34;
		data-flex-basis=&#34;442px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:#262626;&#34;&gt;消费者该如何获取服务提供者具体信息？&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:black;&#34;&gt;服务提供者启动时向eureka注册自己的信息&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:black;&#34;&gt;eureka保存这些信息&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:black;&#34;&gt;消费者根据&lt;/font&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;服务名称&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;向eureka拉取提供者信息&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:#262626;&#34;&gt;如果有多个服务提供者，消费者该如何选择？&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:black;&#34;&gt;服务消费者利用&lt;/font&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;负载均衡&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;算法，从服务列表中挑选一个&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:#262626;&#34;&gt;消费者如何感知服务提供者健康状态？&lt;/font&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;font style=&#34;color:black;&#34;&gt;服务提供者会每隔30秒向EurekaServer发送心跳请求，报告健康状态&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:black;&#34;&gt;eureka会更新记录服务列表信息，心跳不正常会被剔除&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:black;&#34;&gt;消费者就可以拉取到最新的信息&lt;/font&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;总结&#34;&gt;总结
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A13eureka%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/img/image-2.png&#34;
	width=&#34;1283&#34;
	height=&#34;543&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;567px&#34;
	
&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【微服务】2、服务拆分及远程调用</title>
        <link>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A12%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/</link>
        <pubDate>Tue, 16 Apr 2024 15:33:50 +0800</pubDate>
        
        <guid>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A12%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/</guid>
        <description>&lt;h2 id=&#34;微服务拆分&#34;&gt;微服务拆分
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A12%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/img/image.png&#34;
	width=&#34;937&#34;
	height=&#34;480&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;468px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A12%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/img/image-1.png&#34;
	width=&#34;1735&#34;
	height=&#34;894&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;194&#34;
		data-flex-basis=&#34;465px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://xxl-study.yuque.com/attachments/yuque/0/2024/sql/42408833/1713200471379-47d4fefc-7c39-4f00-b17b-baffde97a6e0.sql&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cloud-order.sql&lt;/a&gt;&lt;a class=&#34;link&#34; href=&#34;https://xxl-study.yuque.com/attachments/yuque/0/2024/sql/42408833/1713200471573-831e6e95-625c-486f-8450-ed7c29e61584.sql&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;cloud-user.sql&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A12%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/img/image-2.png&#34;
	width=&#34;1847&#34;
	height=&#34;890&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;207&#34;
		data-flex-basis=&#34;498px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A12%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/img/image-3.png&#34;
	width=&#34;937&#34;
	height=&#34;466&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;201&#34;
		data-flex-basis=&#34;482px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;提供者与消费者&#34;&gt;提供者与消费者
&lt;/h2&gt;&lt;p&gt;:::warning&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;服务提供者：一次业务中，被其它微服务调用的服务。（提供接口给其它微服务）&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;服务消费者：一次业务中，调用其它微服务的服务。（调用其它微服务提供的接口）&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;:::&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A12%E6%9C%8D%E5%8A%A1%E6%8B%86%E5%88%86%E5%8F%8A%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8/img/image-4.png&#34;
	width=&#34;1059&#34;
	height=&#34;187&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;566&#34;
		data-flex-basis=&#34;1359px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:#DF2A3F;&#34;&gt;服务调用关系&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;:::color2&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;font style=&#34;color:black;&#34;&gt;服务提供者：暴露接口给其它微服务调用&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:black;&#34;&gt;服务消费者&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;：&lt;/font&gt;&lt;font style=&#34;color:black;&#34;&gt;调用其它微服务提供的接口&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:black;&#34;&gt;提供者与消费者角色其实是&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:black;&#34;&gt;相对&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:black;&#34;&gt;的&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:black;&#34;&gt;一个服务可以同时是服务提供者和服务消费者&lt;/font&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;:::&lt;/p&gt;
</description>
        </item>
        <item>
        <title>【微服务】1、认识微服务</title>
        <link>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
        <pubDate>Tue, 16 Apr 2024 15:24:26 +0800</pubDate>
        
        <guid>https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/</guid>
        <description>&lt;h2 id=&#34;服务架构演变&#34;&gt;服务架构演变
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image.png&#34;
	width=&#34;1406&#34;
	height=&#34;651&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;215&#34;
		data-flex-basis=&#34;518px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-1.png&#34;
	width=&#34;1343&#34;
	height=&#34;673&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;478px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-2.png&#34;
	width=&#34;937&#34;
	height=&#34;485&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;193&#34;
		data-flex-basis=&#34;463px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:#262626;&#34;&gt;微服务是一种经过良好架构设计的&lt;/font&gt;&lt;strong&gt;&lt;font style=&#34;color:#262626;&#34;&gt;分布式&lt;/font&gt;&lt;/strong&gt;&lt;font style=&#34;color:#262626;&#34;&gt;架构方案，微服务架构特征：&lt;/font&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;单一职责：微服务拆分粒度更小，每一个服务都对应唯一的业务能力，做到单一职责，避免重复业务开发&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;面向服务：微服务对外暴露业务接口&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;自治：团队独立、技术独立、数据独立、部署独立&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;隔离性强：服务调用做好隔离、容错、降级，避免出现级联问题&lt;/font&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-3.png&#34;
	width=&#34;1059&#34;
	height=&#34;286&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;370&#34;
		data-flex-basis=&#34;888px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-4.png&#34;
	width=&#34;1260&#34;
	height=&#34;592&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;212&#34;
		data-flex-basis=&#34;510px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;微服务技术对比&#34;&gt;微服务技术对比
&lt;/h2&gt;&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-5.png&#34;
	width=&#34;1364&#34;
	height=&#34;704&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;193&#34;
		data-flex-basis=&#34;465px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-6.png&#34;
	width=&#34;1755&#34;
	height=&#34;742&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;236&#34;
		data-flex-basis=&#34;567px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-7.png&#34;
	width=&#34;1823&#34;
	height=&#34;807&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;225&#34;
		data-flex-basis=&#34;542px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;springcloud&#34;&gt;SpringCloud
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;SpringCloud是目前国内使用最广泛的微服务框架。官网地址：&lt;/font&gt;&lt;a class=&#34;link&#34; href=&#34;https://spring.io/projects/spring-cloud&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://spring.io/projects/spring-cloud&lt;/a&gt;&lt;font style=&#34;color:#262626;&#34;&gt;。&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;&lt;font style=&#34;color:#262626;&#34;&gt;SpringCloud集成了各种微服务功能组件，并基于SpringBoot实现了这些组件的自动装配，从而&lt;/font&gt;&lt;font style=&#34;color:#333333;&#34;&gt;提供了良好的开箱即用体验：&lt;/font&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-8.png&#34;
	width=&#34;1147&#34;
	height=&#34;499&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;229&#34;
		data-flex-basis=&#34;551px&#34;
	
&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;font style=&#34;color:#404040;&#34;&gt;l&lt;/font&gt;&lt;font style=&#34;color:#333333;&#34;&gt;SpringCloud与SpringBoot的版本兼容关系可以在官网找到 ：&lt;/font&gt;&lt;img src=&#34;https://xxl999227.github.io/archives/%E5%BE%AE%E6%9C%8D%E5%8A%A11%E8%AE%A4%E8%AF%86%E5%BE%AE%E6%9C%8D%E5%8A%A1/img/image-9.png&#34;
	width=&#34;1112&#34;
	height=&#34;614&#34;
	
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;434px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;&lt;font style=&#34;color:#404040;&#34;&gt;&lt;/font&gt;&lt;font style=&#34;color:#262626;&#34;&gt;我们用的版本是 &lt;/font&gt;&lt;font style=&#34;color:#333333;&#34;&gt;Hoxton.SR10，因此对应的SpringBoot版本是2.3.x版本。&lt;/font&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
